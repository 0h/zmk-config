#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define L0 0
#define L1 1
#define L2 2
#define L3 3
#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41

/ {
    behaviors {
        /**
     * Left hand positional hold tap, used for home block modifiers
     */

        lhr: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R>;
            hold-trigger-on-release;
        };

        /**
     * Right hand positional hold tap, used for home block modifiers
     */

        rhr: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        /**
     * Alpha layer (L0)
     */

        layer_0 {
            label = "ALPHA";
            bindings = <
&none  &kp Q  &kp W  &kp E         &kp R      &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P      &none
&none  &kp A  &kp S  &kp D         &kp F      &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI   &none
&none  &kp Z  &kp X  &kp C         &kp V      &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp SLASH  &none
                     &kp LEFT_ALT  &kp LCTRL  &kp LSHFT    &kp SPACE  &mo 1  &sl 2
            >;
        };

        /**
     * Symbols layer (L1)
     */

        layer_1 {
            label = "RAISE";
            bindings = <
&none  &kp EXCL  &kp AT     &kp HASH   &kp DOLLAR  &kp LBKT     &kp RBKT   &kp PLUS     &kp MINUS  &kp ASTRK    &kp EQUAL  &none
&none  &kp AMPS  &kp UNDER  &kp DQT    &kp SQT     &kp LPAR     &kp RPAR   &kp ENTER    &kp ESC    &kp TAB      &kp DEL    &none
&none  &kp PIPE  &kp TILDE  &kp CARET  &kp GRAVE   &kp LBRC     &kp RBRC   &kp PERCENT  &kp TAB    &kp LS(TAB)  &kp BSLH   &none
                            &sk LWIN   &kp BSPC    &kp LSHFT    &kp SPACE  &none        &none
            >;
        };

        /**
     * Number and directions layer (L2)
     */

        layer_2 {
            label = "LOWER";
            bindings = <
&none  &kp NUMBER_1  &kp NUMBER_2       &kp NUMBER_3     &kp NUMBER_4  &kp N5       &kp NUMBER_6  &kp N7        &kp N8          &kp N9     &kp N0  &none
&none  &none         &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE    &none        &kp LEFT      &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT  &none   &none
&none  &none         &none              &none            &none         &none        &none         &none         &none           &none      &none   &none
                                        &to 0            &kp BSPC      &kp LSHFT    &kp SPACE     &to 2         &none
            >;
        };

        /**
     * Controls layer that contains OS controls (bluetooth, mute, play, etc.) (L3)
     */
    };
};
